setwd("~/Repo/AgenciasEstaduais/")
library(tidyverse)
library(lubridate)
library(corrplot)
df <- read_csv2("input/df_2023-04-12.csv") %>%
rename(id = "...1") %>%
filter(!duplicated(Nome))
df %>% glimpse()
cols <- names(df)
cols_numeric <- cols[7:49][str_detect(cols[7:49], "^Tempo")]
cols_boolean <- cols[7:49][!str_detect(cols[7:49], "^Tempo")]
for (i in seq_along(df)) {
if (i > 6) {
col <- names(df)[[i]]
if (col %in% cols_numeric) {
df[[col]] <- ifelse(df[[col]] == 0, -1, df[[col]])
}
df[[col]] <- ifelse(df[[col]] == -1, NA, df[[col]])
}
}
plot_boolean <- function(measurement, col, clean_col, dir = "./plots/categorias_booleanas") {
ref <- tibble(
x = measurement
)
p <- ggplot(ref, aes(x = x)) +
geom_bar(fill = "#406cc3", width = 0.7) +
labs(title = col, x = "Preenchimento", y = "Número de Preenchimentos") +
theme_bw()
ggsave(
filename = paste0(clean_col, ".png"),
plot = p,
path = dir,
height = 6,
width = 6
)
}
plot_numeric <- function(measurement, col, clean_col, dir = "./plots/categorias_numericas") {
ref <- tibble(
x = measurement
) %>%
filter(x > 0)
p <- ggplot(ref, aes(x = x)) +
geom_density(fill = "#406cc3", color = "#12419e", alpha = 0.9) +
labs(title = col, x = "Tempo", y = "Densidade de Preenchimentos") +
theme_bw()
ggsave(
filename = paste0(clean_col, ".png"),
plot = p,
path = dir,
height = 6,
width = 6
)
}
getmode <- function(v) {
v <- v[!is.na(v)]
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
clean_cols <- df %>% janitor::clean_names() %>% names()
df_boolean <- df %>%
select(all_of(cols_boolean)) %>%
pivot_longer(cols = all_of(cols_boolean), names_to = "categoria", values_to = "classificacao")
df_boolean %>%
filter(!is.na(classificacao)) %>%
group_by(classificacao) %>%
summarise(n = n()) %>%
mutate(Perc = round((n / sum(n))*100, digits = 2) %>% paste0("%")) %>%
ggplot(aes(x = as_factor(classificacao), y = n, label = Perc)) +
geom_col(fill = "#406cc3", color = "#12419e", alpha = 0.9, width = 0.7) +
geom_label(fill = "#12419e", color = "white", nudge_y = -30) +
labs(title = "Respostas booleanas (todas as categorias)",
x = "Classificação", y = "Número total de casos") +
theme_light()
ggsave(
filename = "_1_resultados_booleanos_gerais.png",
path = "./plots",
height = 6,
width = 5
)
boolean_heterogeneity <- df_boolean %>%
filter(!is.na(classificacao)) %>%
count(categoria, classificacao) %>%
mutate(classificacao = ifelse(classificacao == 1, "Classe1", "Classe0")) %>%
pivot_wider(names_from = classificacao, values_from = n, values_fill = 0) %>%
mutate(MaiorClasse = ifelse(Classe0 > Classe1, Classe0, Classe1),
Perc = MaiorClasse / (Classe0 + Classe1),
PercLabel = round(Perc*100, digits=2) %>% paste0("%"))
interesting_boolean_cases <- boolean_heterogeneity %>%
filter(Perc < 0.75 & (Classe0 + Classe1 == 29)) %>%
.$categoria
boolean_values <- df %>% select(all_of(interesting_boolean_cases))
boolean_names <- tibble(
simple_values = paste0("c", 1:14),
categories = names(boolean_values),
legends = paste(paste0("c", 1:14), names(boolean_values), sep = " - ")
)
names(boolean_values) <- boolean_names$simple_values
cor_booleans <- cor(boolean_values)
df_agencies_boolean <- df %>%
select(all_of(c("Nome", cols_boolean))) %>%
pivot_longer(cols = all_of(cols_boolean), names_to = "categoria", values_to = "classificacao") %>%
group_by(Nome) %>%
summarise(mean_v = mean(classificacao, na.rm = TRUE))
df_numeric <- df %>%
select(all_of(cols_numeric))
View(df_boolean)
View(boolean_heterogeneity)
View(boolean_heterogeneity %>% mutate(Prevalencia = ifelse(Classe0 > Classe1, "Classe 0", "Classe 1")))
for (i in seq_along(df)) {
if (i > 6) {
col <- names(df)[[i]]
if (any(df[[col]] > 1, na.rm=TRUE)) {
plot_numeric(df[[col]], col, clean_cols[[i]])
} else {
plot_boolean(df[[col]], col, clean_cols[[i]])
}
}
}
